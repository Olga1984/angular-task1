'use strict';

let path = require('path');
let Sassaby = require('sassaby');
let sassUtilsDependencies = require('../../config').dependencyMap;

describe('layout mixins', () => {
    let file = path.resolve('src/mixins/_layout.scss');

    let sb = new Sassaby(file, {
        variables: {
            'minor-second': 1,
            'wk-font-scale': '(base: 16px)'
        },
        dependencies: sassUtilsDependencies
    });

    describe('wk-layout-50-50', () => {
        let mixin = sb.includedMixin('wk-layout-50-50').called();

        describe('creates media query', () =>  {
            let query = '(min-width:37.5rem)';
            it(query, () => mixin.createsMediaQuery(query));
        });

        describe('calls', () =>  {
            it('last mixin', () => mixin.calls('last'));
            it('container mixin', () => mixin.calls('container'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 2 of $wk-global-columns)'));
        });
    });

    describe('wk-layout-50-50-persist', () => {
        let mixin = sb.includedMixin('wk-layout-50-50-persist').called();

        describe('creates media query', () =>  {
            let query = '(min-width:37.5rem)';
            it(query, () => mixin.doesNotCreateMediaQuery(query));
        });

        describe('calls', () =>  {
            it('last mixin', () => mixin.calls('last'));
            it('container mixin', () => mixin.calls('container'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 2 of $wk-global-columns)'));
        });
    });

    describe('wk-layout-33-66', () => {
        let mixin = sb.includedMixin('wk-layout-33-66').called();

        describe('creates media query', () =>  {
            let query = '(min-width:37.5rem)';
            it(query, () => mixin.createsMediaQuery(query));
        });

        describe('calls', () =>  {
            it('last mixin', () => mixin.calls('last'));
            it('container mixin', () => mixin.calls('container'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 3 of $wk-global-columns)'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 3 * 2 of $wk-global-columns)'));
        });
    });

    describe('wk-layout-33-66-persist', () => {
        let mixin = sb.includedMixin('wk-layout-33-66-persist').called();

        describe('creates media query', () =>  {
            let query = '(min-width:37.5rem)';
            it(query, () => mixin.doesNotCreateMediaQuery(query));
        });

        describe('calls', () =>  {
            it('last mixin', () => mixin.calls('last'));
            it('container mixin', () => mixin.calls('container'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 3 of $wk-global-columns)'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 3 * 2 of $wk-global-columns)'));
        });
    });

    describe('wk-layout-66-33', () => {
        let mixin = sb.includedMixin('wk-layout-66-33').called();

        describe('creates media query', () =>  {
            let query = '(min-width:37.5rem)';
            it(query, () => mixin.createsMediaQuery(query));
        });

        describe('calls', () =>  {
            it('last mixin', () => mixin.calls('last'));
            it('container mixin', () => mixin.calls('container'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 3 of $wk-global-columns)'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 3 * 2 of $wk-global-columns)'));
        });
    });

    describe('wk-layout-66-33-persist', () => {
        let mixin = sb.includedMixin('wk-layout-66-33-persist').called();

        describe('creates media query', () =>  {
            let query = '(min-width:37.5rem)';
            it(query, () => mixin.doesNotCreateMediaQuery(query));
        });

        describe('calls', () =>  {
            it('last mixin', () => mixin.calls('last'));
            it('container mixin', () => mixin.calls('container'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 3 of $wk-global-columns)'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 3 * 2 of $wk-global-columns)'));
        });
    });

    describe('wk-layout-25-75', () => {
        let mixin = sb.includedMixin('wk-layout-25-75').called();

        describe('creates media query', () =>  {
            let query = '(min-width:37.5rem)';
            it(query, () => mixin.createsMediaQuery(query));
        });

        describe('calls', () =>  {
            it('last mixin', () => mixin.calls('last'));
            it('container mixin', () => mixin.calls('container'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 4 of $wk-global-columns)'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 4 * 3 of $wk-global-columns)'));
        });
    });

    describe('wk-layout-25-75-persist', () => {
        let mixin = sb.includedMixin('wk-layout-25-75-persist').called();

        describe('creates media query', () =>  {
            let query = '(min-width:37.5rem)';
            it(query, () => mixin.doesNotCreateMediaQuery(query));
        });

        describe('calls', () =>  {
            it('last mixin', () => mixin.calls('last'));
            it('container mixin', () => mixin.calls('container'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 4 of $wk-global-columns)'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 4 * 3 of $wk-global-columns)'));
        });
    });

    describe('wk-layout-75-25', () => {
        let mixin = sb.includedMixin('wk-layout-75-25').called();

        describe('creates media query', () =>  {
            let query = '(min-width:37.5rem)';
            it(query, () => mixin.createsMediaQuery(query));
        });

        describe('calls', () =>  {
            it('last mixin', () => mixin.calls('last'));
            it('container mixin', () => mixin.calls('container'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 4 of $wk-global-columns)'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 4 * 3 of $wk-global-columns)'));
        });
    });

    describe('wk-layout-75-25-persist', () => {
        let mixin = sb.includedMixin('wk-layout-75-25-persist').called();

        describe('creates media query', () =>  {
            let query = '(min-width:37.5rem)';
            it(query, () => mixin.doesNotCreateMediaQuery(query));
        });

        describe('calls', () =>  {
            it('last mixin', () => mixin.calls('last'));
            it('container mixin', () => mixin.calls('container'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 4 of $wk-global-columns)'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 4 * 3 of $wk-global-columns)'));
        });
    });

    describe('wk-layout-33-33-33', () => {
        let mixin = sb.includedMixin('wk-layout-33-33-33').called();

        describe('creates media query', () =>  {
            let query = '(min-width:37.5rem)';
            it(query, () => mixin.createsMediaQuery(query));
        });

        describe('calls', () =>  {
            it('last mixin', () => mixin.calls('last'));
            it('container mixin', () => mixin.calls('container'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 3 of $wk-global-columns)'));
        });
    });

    describe('wk-layout-33-33-33-persist', () => {
        let mixin = sb.includedMixin('wk-layout-33-33-33-persist').called();

        describe('creates media query', () =>  {
            let query = '(min-width:37.5rem)';
            it(query, () => mixin.doesNotCreateMediaQuery(query));
        });

        describe('calls', () =>  {
            it('last mixin', () => mixin.calls('last'));
            it('container mixin', () => mixin.calls('container'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 3 of $wk-global-columns)'));
        });
    });

    describe('wk-layout-25-25-25-25', () => {
        let mixin = sb.includedMixin('wk-layout-25-25-25-25').called();

        describe('creates media query', () =>  {
            let query = '(min-width:37.5rem)';
            it(query, () => mixin.createsMediaQuery(query));
        });

        describe('calls', () =>  {
            it('last mixin', () => mixin.calls('last'));
            it('container mixin', () => mixin.calls('container'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 4 of $wk-global-columns)'));
        });
    });

    describe('wk-layout-25-25-25-25-persist', () => {
        let mixin = sb.includedMixin('wk-layout-25-25-25-25-persist').called();

        describe('creates media query', () =>  {
            let query = '(min-width:37.5rem)';
            it(query, () => mixin.doesNotCreateMediaQuery(query));
        });

        describe('calls', () =>  {
            it('last mixin', () => mixin.calls('last'));
            it('container mixin', () => mixin.calls('container'));
            it('span mixin', () => mixin.calls('span($wk-global-columns / 4 of $wk-global-columns)'));
        });
    });

    describe('wk-layout-push-25', () => {
        let mixin = sb.includedMixin('wk-layout-push-25').called();

        describe('calls', () =>  {
            it('push mixin', () => mixin.calls('push($wk-global-columns / 4)'));
        });
    });

    describe('wk-layout-push-33', () => {
        let mixin = sb.includedMixin('wk-layout-push-33').called();

        describe('calls', () =>  {
            it('push mixin', () => mixin.calls('push($wk-global-columns / 3)'));
        });
    });

    describe('wk-viewport-insulate', () => {
        let mixin = sb.includedMixin('wk-viewport-insulate').called();

        describe('creates media query', () =>  {
            let query = '(min-width:77rem)';
            it(query, () => mixin.createsMediaQuery(query));
        });

        describe('declares property', () =>  {
            it('padding-left', () => mixin.declares('padding-left', '1rem'));
            it('padding-right', () => mixin.declares('padding-right', '1rem'));
        });
    });

    describe('wk-page-content', () => {
        let mixin = sb.includedMixin('wk-page-content').called();

        describe('creates media query', () =>  {
            let query = '(min-width:77rem)';
            it(query, () => mixin.createsMediaQuery(query));
        });

        describe('declares property', () =>  {
            it('padding-left', () => mixin.declares('padding-left', '1rem'));
            it('padding-right', () => mixin.declares('padding-right', '1rem'));
        });
    });

});
