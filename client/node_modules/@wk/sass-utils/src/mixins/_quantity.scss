/////
/// Quantity mixins
/// @since 0.3.0
/// @group wk-sass-utils.mixins
/// @author Ron Edgecomb II
/////

/// Quantity query
/// @author [James Steinbach](https://www.sitepoint.com/using-sass-quantity-queries/)
/// @param $number - Amount of items
/// @param $comparison - Type of comparison equal|greater|less
///
/// @example scss - Usage
///  .grid-item {
///    @include wk-quantity-query(3, 'equal') {
///      color: red;
///    }
///  }
/// @example css - Output
///  .grid-item:nth-last-child(3):first-child,
///  .grid-item:nth-last-child(3):first-child ~ * {
///    color: red;
///  }
@mixin wk-quantity-query($number, $comparison: 'equal') {
    $nth: '';

    @if index(('greater' 'more' '>'), $comparison) {
        $nth: 'n + #{$number}';
    } @else if index(('less' 'fewer' '<'), $comparison) {
        $nth: '-n + #{$number}';
    } @else if index(('equal' 'same' '='), $comparison) {
        $nth: $number;
    } @else {
        @warn 'Sorry, that is an invalid $comparison value.';
    }

    &:nth-last-child(#{$nth}) {
        &:first-child {
            &,
            & ~ * {
                @content;
            }
        }
    }
}

/// quantity query with equal to comparison
/// @author [James Steinbach](https://www.sitepoint.com/using-sass-quantity-queries/)
/// @param $number - Amount of items
///
/// @example scss - Usage
///  .grid-item {
///    @include wk-qq-equal(3) {
///      color: red;
///    }
///  }
/// @example css - Output
///  .grid-item:nth-last-child(3):first-child,
///  .grid-item:nth-last-child(3):first-child ~ * {
///    color: red;
///  }
@mixin wk-qq-equal($number) {
    @include wk-quantity-query($number, equal) {
        @content;
    }
}

/// quantity query with greater than comparison
/// @author [James Steinbach](https://www.sitepoint.com/using-sass-quantity-queries/)
/// @param $number - Amount of items
///
/// @example scss - Usage
///   .grid-item {
///     @include wk-qq-less(3) {
///       color: red;
///     }
///   }
/// @example css - Output
///  .grid-item:nth-last-child(n + 3):first-child,
///  .grid-item:nth-last-child(n + 3):first-child ~ * {
///    color: red;
///  }
@mixin wk-qq-greater($number) {
    @include wk-quantity-query($number, greater) {
        @content;
    }
}

/// quantity query with less than comparison
/// @author [James Steinbach](https://www.sitepoint.com/using-sass-quantity-queries/)
/// @param $number - Amount of items
///
/// @example scss - Usage
///   .grid-item {
///     @include wk-qq-less(3) {
///       color: red;
///     }
///   }
/// @example css - Output
///   .grid-item:nth-last-child(-n + 3):first-child,
///   .grid-item:nth-last-child(-n + 3):first-child ~ * {
///     color: red;
///   }
@mixin wk-qq-less($number) {
    @include wk-quantity-query($number, less) {
        @content;
    }
}

/// select the first row
/// @author Ron Edgecomb II
/// @param $item-count - Amount of items
///
/// @example scss - Usage
///   .grid-item {
///     @include wk-first-row(3) {
///       color: red;
///     }
///   }
/// @example css - Output
///   .grid-item:nth-last-child(-n+3) {
///     color: red;
///   }
@mixin wk-first-row ($item-count) {
    &:nth-child(-n+#{$item-count}) {
        @content;
    }
}

/// select the last full row
/// @author Ron Edgecomb II
/// @param $item-count - Amount of items
///
/// @example scss - Usage
///   .grid-item {
///     @include wk-last-full-row(3) {
///       color: red;
///     }
///   }
/// @example css - Output
///   .grid-item:nth-last-child(-n+3) {
///     color: red;
///   }
@mixin wk-last-full-row ($item-count) {
    &:nth-last-child(-n+#{$item-count}) {
        @content;
    }
}

/// select the last row
/// @author Ron Edgecomb II
/// @param $item-count - Amount of items
/// @param $sibling-selector - Sibling selector
///
/// @example scss - Usage
///   .grid-item {
///     @include wk-last-row(3, '.grid-item');
///   }
///
/// @example css - Output
///   .grid-item:nth-child(3n+1):nth-last-child(-n+3),
///   .grid-item:nth-child(3n+1):nth-last-child(-n+3) ~ .grid-item {
///     color: red;
///   }
@mixin wk-last-row ($item-count, $sibling-selector) {
    &:nth-child(#{$item-count}n+1) {
        &:nth-last-child(-n+#{$item-count}) {
            &,
            & ~ #{$sibling-selector} {
                @content;
            }
        }
    }
}
