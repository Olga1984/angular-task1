'use strict';

const path = require('path');
const pkg = require('./package.json');
const docsConfig = require('./docs.config');

module.exports = {
    test: {
        src: 'src/**/*.spec.js',
        options: {
            reporter: 'mocha-bamboo-reporter'
        }
    },
    sass: {
        src: 'src/wk-sass-utils.scss',
        options: {
            outputStyle: 'expanded',
            includePaths: [
                './node_modules/susy/sass',
                './node_modules/breakpoint-sass/stylesheets',
                './node_modules/modularscale-sass/stylesheets'
            ]
        }
    },
    clean: {
        targets: [
            'vars/*.{js,json,ts}',
            '!vars/colors.common.js'
        ]
    },
    vars: {
        files: [{
            src: './src/utilities/_colors.variables.scss',
            dest: './vars/colors.json'
        }, {
            src: './src/utilities/_variables.scss',
            dest: './vars/general.json'
        }, {
            src: './src/utilities/_scales.scss',
            dest: './vars/scales.json'
        }]
    },
    lint: {
        src: 'src/**/*.scss',
        options: {
            'config-file': '.sass-lint.yml'
        }
    },
    docs: docsConfig,
    sassdocs: {
        src: 'src/**/*.scss',
        options: {
            dest: 'dist/docs/api',
            theme: '@wk/sassdoc-theme',
            display: {
                access: ['public', 'private'],
                alias: true,
                watermark: true
            },
            groups: {
                'undefined': 'Ungrouped',
                'wk-sass-utils': '@wk/sass-utils',
                'wk-sass-utils.mixins': 'Mixins',
                'wk-sass-utils.utilities': 'Utilities',
                'wk-sass-utils.utilities.colors': 'Colors',
                'wk-sass-utils.utilities.functions': 'Functions',
                'wk-sass-utils.utilities.variables': 'Variables',
                'wk-sass-utils.utilities.scales': 'Scales',
                'wk-sass-utils.utilities.exports': 'Exports',
                'wk-sass-utils.vendors': 'Vendors'
            }
        }
    },
    watch: {
        src: [
            'src/**/*.scss'
        ],
        docs: [
            'dist/docs/src/**/*'
        ],
        test: [
            'test/**/*.spec.js'
        ]
    },
    serve: {
        options: {
            logPrefix: 'server',
            logFileChanges: false,
            open: false,
            server: {
                baseDir: './dist/docs'
            },
            files: [
                'dist/docs/**/*.css',
                'dist/docs/**/*.html',
                'dist/docs/**/*.js'
            ]
        }
    },
    dependencyMap: [
        _noWindowsPathsPlease(require.resolve('breakpoint-sass')),
        _noWindowsPathsPlease(require.resolve('modularscale-sass')),
        _noWindowsPathsPlease(require.resolve('susy')),
        _noWindowsPathsPlease(__dirname + path.normalize('/src/_utilities.scss')),
        _noWindowsPathsPlease(__dirname + path.normalize('/src/_mixins.scss'))
    ]
};

function _noWindowsPathsPlease(str) {
    var isExtendedLengthPath = /^\\\\\?\\/.test(str);
    var hasNonAscii = /[^\x00-\x80]+/.test(str);

    if (isExtendedLengthPath || hasNonAscii) {
        return str;
    }

    return str.replace(/\\/g, '/');
}
