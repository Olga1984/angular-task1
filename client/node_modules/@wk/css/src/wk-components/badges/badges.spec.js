'use strict';

let path = require('path');
let Sassaby = require('sassaby');
let sassUtilsDependencies = require('@wk/sass-utils/config').dependencyMap;

describe('mixin wk-alert', () => {
    let mixin;
    let file = path.resolve('src/wk-components/badges/_badges.mixins.scss');
    let sb = new Sassaby(file, {
        variables: {
            'minor-second': 1,
            'wk-button-base-color': 'red',
            'minor-third': 1
        },
        dependencies: sassUtilsDependencies.concat([
            'src/wk-components/badges/_badges.variables.scss'
        ])
    });

    describe('uses provided colors when given', () =>  {
        let mixin = sb.includedMixin('wk-badge').calledWithArgs('#000', '#000');

        it('background-color', () => mixin.declares('background-color', '#000'));
        it('color', () => mixin.declares('color', '#000'));
    });

    describe('declares property', () =>  {
        let mixin = sb.includedMixin('wk-badge').called();

        it('ten properties', () => mixin.hasNumDeclarations(10));
        it('background-color', () => mixin.declares('background-color', 'red'));
        it('color', () => mixin.declares('color', '#fff'));
        it('border-radius', () => mixin.declares('border-radius', '1rem'));
        it('position', () => mixin.declares('position', 'relative'));
        it('white-space', () => mixin.declares('white-space', 'nowrap'));
        it('padding', () => mixin.declares('padding', '.125rem .5rem'));
        it('text-align', () => mixin.declares('text-align', 'center'));
    });
});
